tinymce.PluginManager.requireLangPack('more', 'vi');
tinymce.PluginManager.add("more", function(a) {
    var b = "mce-more",
        c = a.getParam("pagebreak_separator", "<!--more-->"),
        d = new RegExp(c.replace(/[\?\.\*\[\]\(\)\{\}\+\^\$\:]/g, function(a) {
            return "\\" + a
        }), "gi"),
        e = '<img src="' + tinymce.Env.transparentSrc + '" class="' + b + '" data-mce-resize="false" />';
    a.addCommand("mceMore", function() {
    	var patt = new RegExp(/<!--more-->/);
    	if(patt.test(a.getContent()) == false) {
        	a.insertContent(a.settings.pagebreak_split_block ? "<p>" + e + "</p>" : e)
		}
		else {
            dialogError(tinymce.util.I18n.translate('Added earlier!'));
		}
    }), a.addButton("more", {
        title: "More",
        cmd: "mceMore"
    }), a.addMenuItem("more", {
        text: "More",
        icon: "more",
        cmd: "mceMore",
        context: "insert"
    }), a.on("ResolveName", function(c) {
        "IMG" == c.target.nodeName && a.dom.hasClass(c.target, b) && (c.name = "more")
    }), a.on("click", function(c) {
        c = c.target, "IMG" === c.nodeName && a.dom.hasClass(c, b) && a.selection.select(c)
    }), a.on("BeforeSetContent", function(a) {
        a.content = a.content.replace(d, e)
    }), a.on("PreInit", function() {
        a.serializer.addNodeFilter("img", function(b) {
            for (var d, e, f = b.length; f--;)
                if (d = b[f], e = d.attr("class"), e && -1 !== e.indexOf("mce-more")) {
                    var g = d.parent;
                    if (a.schema.getBlockElements()[g.name] && a.settings.pagebreak_split_block) {
                        g.type = 3, g.value = c, g.raw = !0, d.remove();
                        continue
                    }
                    d.type = 3, d.value = c, d.raw = !0
                }
        })
    })
});